manuallyDeletedIds: []
tools:
    - filePattern: "*"
      fileStarter: {command: /opt/sublime_text/sublime_text, parameters: '${filePath}'}
      forFilesNotDirectories: true
      name: Open in Sublime
      useForOpen: true
      waitUntilFinished: false
    - filePattern: "*"
      fileStarter: {command: /usr/bin/xdg-open, parameters: '${filePath}'}
      forFilesNotDirectories: true
      name: Open File
      useForOpen: true
      waitUntilFinished: false
    - filePattern: "*"
      fileStarter: {command: /usr/bin/nautilus, parameters: '${fileUri}'}
      id: revealInNautilus
      name: Reveal in Nautilus
      useForOpen: true
      waitUntilFinished: false
    - filePattern: "*"
      fileStarter: {command: '${smartGitDir}/lib/format-patch.sh', parameters: '${dirSelect}
          ${commit} ${commit2}'}
      id: formatPatch
      name: Format Patch
      useForOpen: false
      waitUntilFinished: true
    - filePattern: "*"
      fileStarter: {command: '${git}', parameters: 'apply ${fileOpen}'}
      id: applyPatch
      name: Apply Patch
      useForOpen: false
      waitUntilFinished: true
    - filePattern: "*"
      fileStarter: {command: '${git}', parameters: fsck --full --no-progress}
      id: verifyDatabase
      name: Verify Database
      useForOpen: false
      waitUntilFinished: true
    - confirmationMessage: Do you want to fast forward '${commit}' to its tracking branch?
      filePattern: "*"
      fileStarter: {command: '${smartGitDir}/lib/ff-merge.sh', parameters: '${commit}'}
      forRefsNotShas: true
      id: fastForwardMerge
      name: Fast-Forward Merge
      useForOpen: false
      waitUntilFinished: true
    - confirmationMessage: Do you want to merge changes to ${commit2} *without* checking
          out?
      filePattern: "*"
      fileStarter: {command: /bin/python3, parameters: '"${smartGitDir}/lib/git-forward-merge.sh"
          ${commit} ${commit2}'}
      forRefsNotShas: true
      id: mergeDirectlyTo
      name: Merge Directly To
      requiresConfirmation: true
      useForOpen: false
      waitUntilFinished: true
    - filePattern: "*"
      fileStarter: {command: '${git}', parameters: --version}
      id: gitVersion
      name: Git Version
      useForOpen: false
      waitUntilFinished: true
    - filePattern: "*"
      fileStarter: {command: '${git}', parameters: lfs --version}
      id: gitLfsVersion
      name: Git-LFS Version
      useForOpen: false
      waitUntilFinished: true
    - filePattern: "*"
      fileStarter: {command: '${git}', parameters: config --list --show-origin}
      id: gitConfigList
      name: Git Config
      useForOpen: false
      waitUntilFinished: true